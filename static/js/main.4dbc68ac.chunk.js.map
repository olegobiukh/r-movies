{"version":3,"sources":["redux/actions/index.js","redux/constants/index.js","components/catalog/Item/styles.js","components/catalog/Item/Item.js","components/catalog/Items/styles.js","components/catalog/Items/Items.js","components/catalog/Top/styles.js","components/catalog/Top/Top.js","containers/Catalog/styles.js","containers/Catalog/Catalog.js","components/catalog/Wrapper/styles.js","components/catalog/Wrapper/Wrapper.js","containers/WatchList/styles.js","containers/WatchList/WatchList.js","containers/Movie/styles.js","router/index.js","containers/Movie/Movie.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/stores/index.js","index.js"],"names":["getMovies","movies","type","payload","getAllGenres","genres","Title","styled","h2","Subtitle","span","Movie","article","Right","div","Item","item","allGenres","watchlist","JSON","parse","localStorage","getItem","useState","watchMovies","setWatchMovies","length","genre_ids","map","el","find","elem","id","element","name","src","poster_path","alt","to","title","className","join","onClick","finalWatchlist","includes","filter","setItem","stringify","Movies","connect","state","actions","key","uid","Header","header","h1","Top","input","CatalogWrapper","Catalog","WrapperBlock","WrapperTop","Wrapper","children","WatchItem","li","button","items","finalWatchList","toggleItemWatched","Container","MovieInfo","Text","p","Button","url","component","WatchList","match","console","log","params","movie","movieGenres","overview","text","setResponses","a","getMoviesItems","results","useEffect","axios","get","result","data","newRoutes","routes","exact","path","Boolean","window","location","hostname","initialState","stores","createStore","action","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4dbc68ac.chunk.js","sourcesContent":["import {\r\n  GET_MOVIES,\r\n  GET_GENRES,\r\n} from \"../constants\";\r\n\r\nexport const getMovies = (movies) => {\r\n  return {\r\n    type: GET_MOVIES,\r\n    payload: movies,\r\n  };\r\n};\r\n\r\nexport const getAllGenres = (genres) => {\r\n  return {\r\n    type: GET_GENRES,\r\n    payload: genres,\r\n  };\r\n};\r\n","const GET_MOVIES = \"GET_MOVIES\";\r\nconst GET_GENRES = \"GET_GENRES\";\r\n\r\nexport { GET_MOVIES, GET_GENRES };\r\n","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h2`\r\n  color: #3f51b5;\r\n`;\r\nconst Subtitle = styled.span`\r\n  color: #3f51b5;\r\n  font-weight: 500;\r\n`;\r\nconst Movie = styled.article`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  border: 1px solid red;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Right = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nexport { Title, Subtitle, Movie, Right };\r\n","import React, { useState } from \"react\";\r\nimport { Title, Subtitle, Movie, Right } from \"./styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Item = ({ item, allGenres }) => {\r\n  const watchlist = JSON.parse(localStorage.getItem(\"watchlist\")) || [];\r\n  const [watchMovies, setWatchMovies] = useState(watchlist);\r\n\r\n  const toggleItemWatched = () => {\r\n    const finalWatchlist = watchMovies.includes(item.id)\r\n      ? watchlist.filter((el) => el !== item.id)\r\n      : [...watchMovies, item.id];\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(finalWatchlist));\r\n    setWatchMovies(finalWatchlist);\r\n  };\r\n\r\n  const genres =\r\n    allGenres.length > 0 &&\r\n    item.genre_ids\r\n      .map((el) => allGenres.find((elem) => elem.id === el))\r\n      .map((element) => element.name);\r\n\r\n  return (\r\n    <Movie>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w154${item.poster_path}`}\r\n        alt={`brad pitt`}\r\n      />\r\n      <Right>\r\n        <Link to={`m${item.id}`}>\r\n          <Title>{item.title}</Title>\r\n        </Link>\r\n        <p className={`title`}>\r\n          <Subtitle>Genre</Subtitle>: {genres && genres.join(\", \")}\r\n        </p>\r\n        <button onClick={toggleItemWatched}>\r\n          {watchMovies.includes(item.id)\r\n            ? \"Remove from watch list\"\r\n            : \"Add to watch list\"}\r\n        </button>\r\n      </Right>\r\n    </Movie>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import styled from \"styled-components\";\r\n\r\nconst Movies = styled.article`\r\n\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 20px;\r\n  padding: 20px 0;\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  @media (max-width: 786px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport { Movies };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../redux/actions\";\r\nimport Item from \"../Item\";\r\nimport { Movies } from \"./styles\";\r\nimport uid from \"uid\";\r\n\r\nconst Items = ({ movies, genres }) => {\r\n  return (\r\n    <Movies>\r\n      {movies && movies.map((item) => (\r\n        <Item key={uid()} item={item} allGenres={genres} />\r\n      ))}\r\n    </Movies>\r\n  );\r\n};\r\n\r\nexport default connect((state) => state, actions)(Items);\r\n","import styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  @media (max-width: 786px) {\r\n    grid-template-columns: auto;\r\n  }\r\n`;\r\nconst Title = styled.h1`\r\n  color: #3f51b5;\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n  @media (max-width: 786px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  justify-self: end;\r\n  padding: 5px;\r\n`;\r\n\r\nexport { Header, Title, Input };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Header, Title, Input } from \"./styles\";\r\n\r\nconst Top = () => {\r\n  return (\r\n    <Header>\r\n      <Link to=\"/watchlist\">Watch list</Link>\r\n      <Title>popular movies</Title>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n","import styled from \"styled-components\";\r\n\r\nconst CatalogWrapper = styled.div`\r\n  display: grid;\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  width: 90%;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport { CatalogWrapper };\r\n","import React from \"react\";\r\nimport Items from \"../../components/catalog/Items\";\r\nimport Top from \"../../components/catalog/Top\";\r\nimport { CatalogWrapper } from \"./styles\";\r\n\r\nconst Catalog = () => {\r\n  return (\r\n    <CatalogWrapper>\r\n      <Top />\r\n      <Items />\r\n    </CatalogWrapper>\r\n  );\r\n};\r\n\r\nexport default Catalog;\r\n","import styled from \"styled-components\";\r\n\r\nconst WrapperBlock = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  width: 90%;\r\n`;\r\nconst Title = styled.h2``;\r\nconst WrapperTop = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid red;\r\n`;\r\n\r\nexport { WrapperBlock, WrapperTop, Title };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { WrapperBlock, WrapperTop, Title } from \"./styles\";\r\n\r\nconst Wrapper = ({ title, children }) => {\r\n  return (\r\n    <WrapperBlock>\r\n      <WrapperTop>\r\n        <Title>{title}</Title>\r\n        <Link to=\"/\">to Main page</Link>\r\n      </WrapperTop>\r\n      {children}\r\n    </WrapperBlock>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst WatchItem = styled.li`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-between;\r\n  max-width: 1200px;\r\n  padding: 10px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: 4px solid blue;\r\n  background-color: blue;\r\n  color: white;\r\n  border-radius: 9px;\r\n  cursor: pointer;\r\n  transition: all 0.5s;\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nexport { WatchItem, Button };\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport Wrapper from \"../../components/catalog/Wrapper\";\r\nimport { WatchItem, Button } from \"./styles\";\r\nimport uid from \"uid\";\r\n\r\nconst WatchList = ({ movies }) => {\r\n  const watchlist = JSON.parse(localStorage.getItem(\"watchlist\")) || [];\r\n  const [watchMovies, setWatchMovies] = useState(watchlist);\r\n\r\n  const toggleItemWatched = (id) => {\r\n    const finalWatchList = watchMovies.filter((item) => item !== id);\r\n\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(finalWatchList));\r\n    setWatchMovies(finalWatchList);\r\n  };\r\n\r\n  const items =\r\n    watchMovies.length > 0\r\n      ? movies\r\n          .filter((item) => watchMovies.includes(item.id))\r\n          .map((item) => (\r\n            <WatchItem key={uid()}>\r\n              {item.title}\r\n              <button type=\"text\" onClick={() => toggleItemWatched(item.id)}>Delete</button>\r\n            </WatchItem>\r\n          ))\r\n      : \"No movies added\";\r\n\r\n  return <Wrapper title=\"Watch list\">{items}</Wrapper>;\r\n};\r\n\r\nexport default connect((state) => state, actions)(WatchList);\r\n","import styled from \"styled-components\";\r\n\r\nconst MovieWrapper = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  width: 90%;\r\n`;\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-template-column: 1fr 1fr;\r\n  border: 2px solid red;\r\n  padding: 10px;\r\n`;\r\nconst MovieInfo = styled.div`\r\n  padding: 20px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Title = styled.h2``;\r\nconst MovieTop = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid red;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  transition: all 0.5s;\r\n  &:hover {\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nexport { Button, Container, MovieTop, MovieInfo, MovieWrapper, Text, Title };\r\n","import Catalog from \"../containers/Catalog\";\r\nimport WatchList from \"../containers/WatchList\";\r\nimport Movie from \"../containers/Movie\";\r\n\r\nexport default [\r\n  {\r\n    url: \"/\",\r\n    component: Catalog,\r\n  },\r\n  {\r\n    url: \"/watchlist\",\r\n    component: WatchList,\r\n  },\r\n  {\r\n    url: \"/m:id\",\r\n    component: Movie,\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Container, MovieInfo, Text, Button } from \"./styles\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport Wrapper from \"../../components/catalog/Wrapper\";\r\n\r\nconst Movie = ({ match, movies, genres }) => {\r\n  console.log(match.params.id);\r\n  const watchlist = JSON.parse(localStorage.getItem(\"watchlist\")) || [];\r\n  const [watchMovies, setWatchMovies] = useState(watchlist);\r\n\r\n  const id = +match.params.id;\r\n  const movie = movies.find((item) => item.id === id);\r\n  console.log(JSON.stringify(genres));\r\n  const movieGenres =\r\n    movies.length > 0 && genres.length > 0\r\n      ? movie.genre_ids\r\n          .map((el) => genres.find((elem) => elem.id === el))\r\n          .map((element) => element.name)\r\n          .join(\", \")\r\n      : \"\";\r\n\r\n  const addToWatchList = () => {\r\n    const finalWatchlist = watchMovies.includes(movie.id)\r\n      ? watchlist.filter((item) => item !== movie.id)\r\n      : [...watchMovies, movie.id];\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(finalWatchlist));\r\n    setWatchMovies(finalWatchlist);\r\n  };\r\n\r\n  return movie ? (\r\n    <Wrapper title={movie.title}>\r\n      <Container>\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\r\n          alt={movie.title}\r\n        />\r\n\r\n        <MovieInfo>\r\n          <Text>\r\n            <strong>Overview:</strong> {movie.overview}\r\n          </Text>\r\n          <Text>\r\n            <strong>Genres:</strong> {movieGenres}\r\n          </Text>\r\n          <Button text=\"button\" onClick={addToWatchList}>\r\n            {watchMovies.includes(id)\r\n              ? \"Remove from watchlist\"\r\n              : \"Add to watchlist\"}\r\n          </Button>\r\n        </MovieInfo>\r\n      </Container>\r\n    </Wrapper>\r\n  ) : (\r\n    <p>Loading...</p>\r\n  );\r\n};\r\n\r\nexport default connect((state) => state, actions)(Movie);\r\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./redux/actions\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport uid from \"uid\";\nimport routes from \"./router\";\nimport axios from \"axios\";\n\nconst baseUrl = \"https://api.themoviedb.org/3/\";\n\nfunction App({ getMovies, getAllGenres }) {\n  const setResponses = async () => {\n    const movies = await getMoviesItems(\n      \"discover/movie?sort_by=popularity.desc&api_key=98135c4d3cc392347281f8d007876760&language=en-US&page=1\"\n    );\n    const genres = await getMoviesItems(\n      \"genre/movie/list?api_key=98135c4d3cc392347281f8d007876760&language=en-US\"\n    );\n    getMovies(movies.results);\n    getAllGenres(genres.genres);\n    \n  };\n\n  useEffect(() => {\n    setResponses();\n  }, []);\n\n  const getMoviesItems = async (url) => {\n    try {\n      const result = await axios.get(baseUrl + url);\n      return result.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const newRoutes = routes.map((item) => (\n    <Route key={uid()} exact path={item.url} component={item.component} />\n  ));\n  return (\n    <HashRouter>\n      <Switch>{newRoutes}</Switch>\n    </HashRouter>\n  );\n}\n\nexport default connect((state) => state, actions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_MOVIES, GET_GENRES } from \"../constants\";\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  genres: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n      };\r\n    case GET_GENRES:\r\n      return {\r\n        ...state,\r\n        genres: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from 'redux';\r\nimport reducers from '../reducers';\r\n\r\nconst stores = createStore(reducers);\r\n\r\nexport default stores;\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport stores from \"./redux/stores\";\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize}\n \n  * {\n    padding: 0;\n    maring: 0;\n    box-sizing: border-box;\n  }\n  `;\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <Provider store={stores}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}