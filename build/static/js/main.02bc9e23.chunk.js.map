{"version":3,"sources":["store/index.js","components/catalog/Item/styles.js","components/catalog/Item/Item.js","components/catalog/Items/styles.js","components/catalog/Items/Items.js","components/catalog/Top/styles.js","components/catalog/Top/Top.js","containers/Catalog/styles.js","components/catalog/Pagination/styles.js","components/catalog/Pagination/Pagination.js","containers/Catalog/Catalog.js","components/catalog/Wrapper/styles.js","components/catalog/Wrapper/Wrapper.js","containers/WatchList/styles.js","containers/WatchList/WatchList.js","containers/Movie/styles.js","router/index.js","containers/Movie/Movie.js","App.js","serviceWorker.js","index.js"],"names":["store","observable","movies","genres","total_pages","page","isLoaded","Title","styled","h2","Subtitle","span","Movie","article","Right","div","Item","item","allGenres","watchlist","JSON","parse","localStorage","getItem","useState","watchMovies","setWatchMovies","length","genre_ids","map","el","find","elem","id","element","name","src","poster_path","alt","title","to","className","join","onClick","finalWatchlist","some","filter","setItem","stringify","Movies","Items","inject","observer","key","uid","Header","header","h1","Top","input","CatalogWrapper","Button","button","props","current","css","isLast","Buttons","Pagination","changePage","chosenPage","buttons","firstButton","lastButton","Catalog","WrapperBlock","WrapperTop","Wrapper","children","WatchItem","li","WatchList","console","log","items","type","finalWatchList","toggleItemWatched","Container","MovieInfo","Text","p","url","component","match","params","movie","movieGenres","overview","text","App","setResponses","a","getMoviesItems","results","useEffect","axios","get","result","data","newRoutes","routes","exact","path","Boolean","window","location","hostname","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02bc9e23.chunk.js","sourcesContent":["import { observable } from \"mobx\"\r\n  \r\nexport const store = observable({\r\n  movies: [], \r\n  genres: [],\r\n  total_pages: 500,\r\n  page: 1,\r\n  isLoaded: true\r\n});","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h2`\r\n  color: #3f51b5;\r\n`;\r\nconst Subtitle = styled.span`\r\n  color: #3f51b5;\r\n  font-weight: 500;\r\n`;\r\nconst Movie = styled.article`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  border: 1px solid red;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Right = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nexport { Title, Subtitle, Movie, Right };\r\n","import React, { useState } from \"react\";\r\nimport { Title, Subtitle, Movie, Right } from \"./styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Item = ({ item, allGenres }) => {\r\n  const watchlist = JSON.parse(localStorage.getItem(\"watchlist\")) || [];\r\n  const [watchMovies, setWatchMovies] = useState(watchlist);\r\n\r\n  const toggleItemWatched = () => {\r\n    const finalWatchlist = watchMovies.some((el) => el.id === item.id)\r\n      ? watchlist.filter((el) => el.id !== item.id)\r\n      : [...watchMovies, { id: item.id, title: item.title }];\r\n\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(finalWatchlist));\r\n    setWatchMovies(finalWatchlist);\r\n  };\r\n\r\n  const genres =\r\n    allGenres.length > 0 &&\r\n    item.genre_ids\r\n      .map((el) => allGenres.find((elem) => elem.id === el))\r\n      .map((element) => element.name);\r\n\r\n  return (\r\n    <Movie>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w154${item.poster_path}`}\r\n        alt={item.title}\r\n      />\r\n      <Right>\r\n        <Link to={`m${item.id}`}>\r\n          <Title>{item.title}</Title>\r\n        </Link>\r\n        <p className={`title`}>\r\n          <Subtitle>Genre</Subtitle>: {genres && genres.join(\", \")}\r\n        </p>\r\n        <button onClick={toggleItemWatched}>\r\n          {watchMovies.some((el) => el.id === item.id)\r\n            ? \"Remove from watch list\"\r\n            : \"Add to watch list\"}\r\n        </button>\r\n      </Right>\r\n    </Movie>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import styled from \"styled-components\";\r\n\r\nconst Movies = styled.article`\r\n\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 20px;\r\n  padding: 20px 0;\r\n  @media (max-width: 1200px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  @media (max-width: 786px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport { Movies };\r\n","import React from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport Item from \"../Item\";\r\nimport { Movies } from \"./styles\";\r\nimport uid from \"uid\";\r\n\r\nconst Items = inject(\"store\")(\r\n  observer(({ store }) => {\r\n    const { movies, genres } = store;\r\n  return (\r\n    <Movies>\r\n      {movies && movies.map((item) => (\r\n        <Item key={uid()} item={item} allGenres={genres} />\r\n      ))}\r\n    </Movies>\r\n  );\r\n}));\r\n\r\nexport default Items;\r\n","import styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  @media (max-width: 786px) {\r\n    grid-template-columns: auto;\r\n  }\r\n`;\r\nconst Title = styled.h1`\r\n  color: #3f51b5;\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n  @media (max-width: 786px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  justify-self: end;\r\n  padding: 5px;\r\n`;\r\n\r\nexport { Header, Title, Input };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Header, Title } from \"./styles\";\r\n\r\nconst Top = () => {\r\n  return (\r\n    <Header>\r\n      <Link to=\"/watchlist\">Watch list</Link>\r\n      <Title>movies</Title>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n","import styled from \"styled-components\";\r\n\r\nconst CatalogWrapper = styled.div`\r\n  display: grid;\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  width: 90%;\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport { CatalogWrapper };\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  padding: 8px 16px;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    background-color: #ddd;\r\n    ${(props) =>\r\n      props.current &&\r\n      css`\r\n        background: #f44336;\r\n      `}\r\n  }\r\n  ${(props) =>\r\n    !props.isLoaded &&\r\n    css`\r\n      opacity: 0.7;\r\n      pointer-events: none;\r\n    `}\r\n  ${(props) =>\r\n    props.current &&\r\n    css`\r\n      background: #f44336;\r\n      color: #fff;\r\n    `}\r\n  ${(props) =>\r\n    (props.page >= 4 || props.isLast) &&\r\n    css`\r\n      background: #f4f4f4;\r\n    `}\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: flex-start;\r\n  grid-gap: 5px;\r\n`;\r\n\r\nexport { Button, Buttons };\r\n","import React from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Button, Buttons } from \"./styles\";\r\nimport uid from \"uid\";\r\n\r\nconst Pagination = inject(\"store\")(\r\n  observer(({ store }) => {\r\n    const { page, total_pages, isLoaded } = store;\r\n    const startPage = 1;\r\n\r\n    const pages =\r\n      page > startPage && total_pages > page\r\n        ? [page - 1, page, page + 1]\r\n        : page === startPage\r\n        ? [1, 2, 3]\r\n        : page === total_pages\r\n        ? [total_pages - 2, total_pages - 1, total_pages]\r\n        : null;\r\n\r\n    const changePage = (chosenPage) => {\r\n      store.page = chosenPage;\r\n    };\r\n\r\n    const buttons = pages.map((item) => (\r\n      <Button\r\n        isLoaded={isLoaded}\r\n        current={item === page}\r\n        key={uid()}\r\n        onClick={() => changePage(item)}\r\n      >\r\n        {item}\r\n      </Button>\r\n    ));\r\n\r\n    const firstButton =\r\n      page > 2 ? (\r\n        <Button\r\n          isLoaded={isLoaded}\r\n          current={page === startPage}\r\n          page={4}\r\n          onClick={() => changePage(startPage)}\r\n        >\r\n          {startPage}\r\n        </Button>\r\n      ) : null;\r\n\r\n    const lastButton =\r\n      page < total_pages - 1 ? (\r\n        <Button\r\n          isLoaded={isLoaded}\r\n          current={page === total_pages}\r\n          isLast={page < total_pages}\r\n          onClick={() => changePage(total_pages)}\r\n        >\r\n          {total_pages}\r\n        </Button>\r\n      ) : null;\r\n\r\n    return (\r\n      <Buttons>\r\n        {firstButton}\r\n        {buttons}\r\n        {lastButton}\r\n      </Buttons>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport Items from \"../../components/catalog/Items\";\r\nimport Top from \"../../components/catalog/Top\";\r\nimport { CatalogWrapper } from \"./styles\";\r\nimport Pagination from \"../../components/catalog/Pagination\";\r\n\r\nconst Catalog = () => {\r\n  return (\r\n    <CatalogWrapper>\r\n      <Top />\r\n      <Pagination />\r\n      <Items />\r\n    </CatalogWrapper>\r\n  );\r\n};\r\n\r\nexport default Catalog;\r\n","import styled from \"styled-components\";\r\n\r\nconst WrapperBlock = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  width: 90%;\r\n`;\r\nconst Title = styled.h2``;\r\nconst WrapperTop = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid red;\r\n`;\r\n\r\nexport { WrapperBlock, WrapperTop, Title };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { WrapperBlock, WrapperTop, Title } from \"./styles\";\r\n\r\nconst Wrapper = ({ title, children }) => {\r\n  return (\r\n    <WrapperBlock>\r\n      <WrapperTop>\r\n        <Title>{title}</Title>\r\n        <Link to=\"/\">to Main page</Link>\r\n      </WrapperTop>\r\n      {children}\r\n    </WrapperBlock>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst WatchItem = styled.li`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-between;\r\n  max-width: 1200px;\r\n  padding: 10px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: 4px solid blue;\r\n  background-color: blue;\r\n  color: white;\r\n  border-radius: 9px;\r\n  cursor: pointer;\r\n  transition: all 0.5s;\r\n  &:hover {\r\n    background-color: transparent;\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nexport { WatchItem, Button };\r\n","import React, { useState } from \"react\";\r\nimport Wrapper from \"../../components/catalog/Wrapper\";\r\nimport { WatchItem } from \"./styles\";\r\nimport uid from \"uid\";\r\n\r\nconst WatchList = () => {\r\n  const watchlist = JSON.parse(localStorage.getItem(\"watchlist\")) || [];\r\n  console.log(watchlist);\r\n\r\n  const [watchMovies, setWatchMovies] = useState(watchlist);\r\n\r\n  const toggleItemWatched = (id) => {\r\n    const finalWatchList = watchMovies.filter((item) => item.id !== id);\r\n\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(finalWatchList));\r\n    setWatchMovies(finalWatchList);\r\n  };\r\n\r\n  const items =\r\n    watchMovies.length > 0\r\n      ? watchMovies.map((item) => (\r\n          <WatchItem key={uid()}>\r\n            {item.title}\r\n            <button type=\"text\" onClick={() => toggleItemWatched(item.id)}>\r\n              Delete\r\n            </button>\r\n          </WatchItem>\r\n        ))\r\n      : \"No movies added\";\r\n\r\n  return <Wrapper title=\"Watch list\">{items}</Wrapper>;\r\n};\r\n\r\nexport default WatchList;\r\n","import styled from \"styled-components\";\r\n\r\nconst MovieWrapper = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  width: 90%;\r\n`;\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  grid-template-column: 1fr 1fr;\r\n  border: 2px solid red;\r\n  padding: 10px;\r\n`;\r\nconst MovieInfo = styled.div`\r\n  padding: 20px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Title = styled.h2``;\r\nconst MovieTop = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid red;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  transition: all 0.5s;\r\n  &:hover {\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nexport { Button, Container, MovieTop, MovieInfo, MovieWrapper, Text, Title };\r\n","import Catalog from \"../containers/Catalog\";\r\nimport WatchList from \"../containers/WatchList\";\r\nimport Movie from \"../containers/Movie\";\r\n\r\nexport default [\r\n  {\r\n    url: \"/\",\r\n    component: Catalog,\r\n  },\r\n  {\r\n    url: \"/watchlist\",\r\n    component: WatchList,\r\n  },\r\n  {\r\n    url: \"/m:id\",\r\n    component: Movie,\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Container, MovieInfo, Text, Button } from \"./styles\";\r\nimport Wrapper from \"../../components/catalog/Wrapper\";\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nconst Movie = inject(\"store\")(\r\n  observer(({ store, match }) => {\r\n    const { movies, genres } = store;\r\n    console.log(movies);\r\n\r\n    console.log(match.params.id);\r\n    const watchlist = JSON.parse(localStorage.getItem(\"watchlist\")) || [];\r\n    const [watchMovies, setWatchMovies] = useState(watchlist);\r\n\r\n    const id = +match.params.id;\r\n    const movie = movies.find((item) => item.id === id);\r\n    console.log(JSON.stringify(movie));\r\n    const movieGenres =\r\n      movies.length > 0 && genres.length > 0\r\n        ? movie.genre_ids\r\n            .map((el) => genres.find((elem) => elem.id === el))\r\n            .map((element) => element.name)\r\n            .join(\", \")\r\n        : \"\";\r\n\r\n    const addToWatchList = () => {\r\n      const finalWatchlist = watchMovies.some((el) => el.id === movie.id)\r\n        ? watchlist.filter((el) => el.id !== movie.id)\r\n        : [...watchMovies, { id: movie.id, title: movie.title }];\r\n\r\n      localStorage.setItem(\"watchlist\", JSON.stringify(finalWatchlist));\r\n      setWatchMovies(finalWatchlist);\r\n    };\r\n\r\n    return movie ? (\r\n      <Wrapper title={movie.title}>\r\n        <Container>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n          <MovieInfo>\r\n            <Text>\r\n              <strong>Overview:</strong> {movie.overview}\r\n            </Text>\r\n            <Text>\r\n              <strong>Genres:</strong> {movieGenres}\r\n            </Text>\r\n            <Button text=\"button\" onClick={addToWatchList}>\r\n              {watchMovies.some((el) => el.id === movie.id)\r\n                ? \"Remove from watchlist\"\r\n                : \"Add to watchlist\"}\r\n            </Button>\r\n          </MovieInfo>\r\n        </Container>\r\n      </Wrapper>\r\n    ) : (\r\n      <p>Loading...</p>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Movie;\r\n","import React, { useEffect } from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport uid from \"uid\";\r\nimport routes from \"./router\";\r\nimport axios from \"axios\";\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nconst baseUrl = \"https://api.themoviedb.org/3/\";\r\n\r\nconst App = inject(\"store\")(\r\n  observer(({ store }) => {\r\n    const setResponses = async () => {\r\n      store.isLoaded = false;\r\n      const movies = await getMoviesItems(\r\n        `discover/movie?sort_by=popularity.desc&api_key=98135c4d3cc392347281f8d007876760&language=en-US&page=${store.page}`\r\n      );\r\n      const genres = await getMoviesItems(\r\n        \"genre/movie/list?api_key=98135c4d3cc392347281f8d007876760&language=en-US\"\r\n      );\r\n\r\n      store.movies = movies.results;\r\n      store.genres = genres.genres;\r\n      store.page = movies.page;\r\n      store.total_pages = movies.total_pages;\r\n      store.isLoaded = true;\r\n    };\r\n\r\n    useEffect(() => {\r\n      setResponses();\r\n    }, [store.page]);\r\n\r\n    const getMoviesItems = async (url) => {\r\n      try {\r\n        const result = await axios.get(baseUrl + url);\r\n        return result.data;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    const newRoutes = routes.map((item) => (\r\n      <Route key={uid()} exact path={item.url} component={item.component} />\r\n    ));\r\n    return (\r\n      <HashRouter>\r\n        <Switch>{newRoutes}</Switch>\r\n      </HashRouter>\r\n    );\r\n  })\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"mobx-react\";\r\nimport { store } from \"./store\";\r\nimport App from \"./App\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { normalize } from \"styled-normalize\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n \r\n  * {\r\n    padding: 0;\r\n    maring: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  `;\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}